name: get-kevs

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:


jobs:
  runbooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v 4.2.2
        with:
          token: ${{secrets.PAT}}

      - name: Download CISA KEV Catalog
        run: |
          KEV_URL="https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json"
          OUTPUT_FILE="known_exploited_vulnerabilities.json"
          
          # Download the JSON file using curl
          curl -L "$KEV_URL" -o "$OUTPUT_FILE"
          
          # Validate the downloaded file
          if ! jq empty "$OUTPUT_FILE" 2>/dev/null; then
            echo "Error: Downloaded file is not valid JSON"
            exit 1
          fi
          
          # Print total number of vulnerabilities
          TOTAL_VULNS=$(jq '.vulnerabilities | length' "$OUTPUT_FILE")
          echo "Total vulnerabilities in catalog: $TOTAL_VULNS"

      - name: Check for Changes
        id: changes
        run: |
          # Show current status for debugging
          git status
          # Add the file and capture the diff
          git add known_exploited_vulnerabilities.json
          # Check if there are staged changes
          git diff --cached --quiet || echo "changes=true" >> $GITHUB_OUTPUT
          if git diff --cached --quiet; then
            echo "No changes detected"
          else
            echo "DIFF<<EOF" >> $GITHUB_OUTPUT
            git diff --cached >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Commit Changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git config --global user.email "${EMAIL}"
          git config --global user.name "${NAME}"
          git remote set-url origin https://x-access-token:${PAT}@github.com/${GITHUB_REPOSITORY}.git
          git commit -m "New KEVs Detected"
          git push
        env:
          NAME: ${{ secrets.NAME }}
          EMAIL: ${{ secrets.EMAIL }}
          PAT: ${{ secrets.PAT }}

      - name: Create Release
        if: steps.changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d-%H%M%S')
          gh release create "kev-update-${TIMESTAMP}" \
            --title "KEV Update ${TIMESTAMP}" \
            --notes "Changes detected in Known Exploited Vulnerabilities: ${{ steps.changes.outputs.changes }}"
